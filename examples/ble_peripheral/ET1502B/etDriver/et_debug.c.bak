//#include "macro.h"
#include "ET1502B.h"
#include <stdio.h>
#include <stdarg.h>  
#include <string.h>
#include "et_debug.h"
//#include "app_uart.h"


#include <stdint.h>
#ifdef ENABLE_SIMPLE_UART
#include "etSimple_uart.h"
#endif
/*
void uart_debug(const char *dbgmsg)
{
	//unsigned char  buff[100] = {0};
	unsigned int len = 0,len2=strlen(dbgmsg);

	for(len=0;len<len2;len++)
	{
		 //app_uart_put(dbgmsg[len]);
			simple_uart_put(dbgmsg[len]);
	}
}

void Dbg_Print_Str(const char* dbgmsg)
{
	//DbgPrintf( "%s",dbgmsg );
	uart_debug(dbgmsg);
}
*/

int DbgPrintf( const char * format, ... )
{
	int ret=0;
#if DEBUG_UART_EN 

#ifndef ENABLE_SIMPLE_UART //kevin add	
	  /*    char tx_buf[256];
        int msg_len,len;
        va_list args;
        va_start(args, format);
        msg_len = vsprintf(tx_buf, format, args);
        va_end(args);

			
				for(len=0;len<msg_len;len++)
				{
					simple_uart_put(tx_buf[len]);
					//while(app_uart_put(tx_buf[len]) != NRF_SUCCESS);

					//simple_uart_put(tx_buf[len]);
				}*/
#else	
        #if ENABLE_UART
	      char tx_buf[128];
        //int msg_len;
        va_list args;
        va_start(args, format);
        vsprintf(tx_buf, format, args);
        va_end(args);				
				simple_uart_putstring((const uint8_t *)tx_buf);
        #endif
#endif
#endif			
		return ret;
}

void DbgPrintfbuff(uint8_t * tx_buf, uint16_t len )
{
#if DEBUG_UART_EN 
#ifndef ENABLE_SIMPLE_UART //kevin add	
	   /*   char tx_buf[256];
        int msg_len,len;
        va_list args;
        va_start(args, format);
        msg_len = vsprintf(tx_buf, format, args);
        va_end(args);

			
				for(len=0;len<msg_len;len++)
				{
					simple_uart_put(tx_buf[len]);
					//while(app_uart_put(tx_buf[len]) != NRF_SUCCESS);

					//simple_uart_put(tx_buf[len]);
				}*/
#else	
        //uint16_t msg_len;			
      #if ENABLE_UART
				simple_uart_putstringbuff(tx_buf,len);
      #endif
#endif
#endif

}

void DbgPrintfbuff_2_HEX( const char * format, ... )
{
#if DEBUG_UART_EN 
        #if ENABLE_UART
	      char tx_buf[128];
        //int msg_len;
        va_list args;
        va_start(args, format);
        vsprintf(tx_buf, format, args);
        va_end(args);				
				simple_uart_putstring((const uint8_t *)tx_buf);
        #endif

#endif

}
//void DbgPrintf_nop( const char * format, ... )
//{
//}

